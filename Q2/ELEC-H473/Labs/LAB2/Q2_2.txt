movi 1,4
sw 1,0,0 // number1
movi 2,3
sw 2,0,1 // number2



beq 1,2,samev // number 2 is equal to number 1



movi 1,0x8000
sw 1,0,2 // mask
movi 1,0x7FFF
sw 1,0,3 // comparator
movi 1,0xFFFF
SW 1,0,4// conoarator2



lw 1,0,0 //R1 STORE num1
lw 2,0,1 //R2 STORE num2
lw 3,0,2 //R3 STORE mask
lw 4,0,4 //R4 STORE comparator2
//0 positive 1 negative
// first compare number sign
nand 5,1,3
beq 5,4,2 // if msb = 0 jump 2 instructions
addi 6,0,1
sw 6,0,5 // store number 1 MSB=1 to memory data address 5
nand 5,2,3
beq 5,4,2 // if msb = 0 jump 2 instructions
addi 7,0,1
sw 7,0,6 // store number 1 MSB=1 to memory data address 6





lw 1,0,5
lw 2,0,6
beq 1,2, same // number 1 and number 2 have same sign
beq 1,0, numb1// number 1 is positive,, num1 larger than number 2




movi 1,0// number 2 larger than number 1
beq 0,0,end




same: lw 1,0,0
lw 2,0,1
movi 3,0xffff
nand 7,2,3
addi 7,7,1
add 6,1,7
lw 3,0,2 //R3 STORE mask
lw 4,0,4 //R4 STORE comparator2
nand 7,6,3
beq 7,4,numb1




movi 1,0 //number 2 larger than number 1
beq 0,0,end




numb1: movi 1,1 //number1 larger than number 2
beq 0,0,end
samev: movi 1,0 // number1 equal to number 2
beq 0,0,end
end: halt